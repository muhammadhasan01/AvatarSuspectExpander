{"version":3,"sources":["Navbar/Navbar.js","utils/Data/API.js","utils/Style/ColorElement.js","utils/Graph/GraphBuilder.js","utils/Data/ValidateData.js","utils/Graph/GraphExpander.js","SearchBar/SearchBar.js","FriendDrawer/FriendDrawer.js","utils/Graph/GraphConfiguration.js","FriendGraph/FriendGraph.js","SearchGraph/SearchGraph.js","App.js","serviceWorker.js","index.js"],"names":["navTheme","createMuiTheme","typography","fontFamily","join","flexGrow","align","styles","root","appbar","alignItems","NavBar","props","className","ThemeProvider","theme","AppBar","style","position","Toolbar","Typography","variant","color","nameTitle","API","ColorElement","Map","set","GraphBuilder","id","name","element","friends","data","nodes","links","mapData","mapLinks","push","get","forEach","friend","source","target","ValidateData","arr","hashMap","validArr","e","has","GraphExpander","graphData","SearchBar","onChanged","setState","idValue","value","handleSubmit","preventDefault","handleGetRequest","state","onSubmit","this","OutlinedInput","fullWidth","required","type","onChange","placeholder","Box","m","Button","React","Component","getStyle","retColor","padding","border","borderRadius","list","display","flexWrap","justifyContent","p","map","key","ListItemText","primary","secondary","listItem","FriendDrawer","showFriends","Fragment","Drawer","anchor","open","onClose","handleCloseDrawer","onOpen","handleOpenDrawer","onClick","size","GraphConfiguration","landscape","height","width","minZoom","maxZoom","node","fontSize","strokeColor","portrait","FriendGraph","onMouseOverNode","dataValue","handleHoveredNodeDetail","payload","validFriends","onHoveredNodeDetail","axios","then","result","catch","error","console","log","textAlign","disabled","query","config","onClickNode","onExpandNode","SearchGraph","setData","errorMsg","handleExpand","App","Navbar","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.3db5e706.chunk.js","sourcesContent":["import React from 'react';\r\nimport { AppBar, Toolbar, Typography, createMuiTheme, ThemeProvider } from '@material-ui/core';\r\n\r\nconst navTheme = createMuiTheme({\r\n    typography: {\r\n      fontFamily: [\r\n        'Lato',\r\n        'Roboto',\r\n        '\"Segoe UI\"',\r\n        '\"Helvetica Neue\"',\r\n      ].join(','),\r\n      flexGrow: 1,\r\n      align: 'center',\r\n    },\r\n});\r\n\r\nconst styles = {\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    appbar: {\r\n      alignItems: 'center',\r\n    }\r\n};\r\n\r\nconst NavBar = (props) => {\r\n\r\n    return (\r\n        <div className={styles.root}>\r\n        <ThemeProvider theme={navTheme}>\r\n            <AppBar style={styles.appbar} position=\"static\">\r\n                <Toolbar>\r\n                    <Typography variant=\"h5\" color=\"inherit\">\r\n                    {props.nameTitle}\r\n                    </Typography>\r\n                </Toolbar>\r\n            </AppBar>\r\n        </ThemeProvider>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NavBar;","const API = 'https://avatar.labpro.dev/friends/';\r\n\r\nexport default API;","const ColorElement = new Map();\r\nColorElement.set('fire', '#C0392B');\r\nColorElement.set('water', '#2980B9');\r\nColorElement.set('air', '#85C1E9');\r\nColorElement.set('earth', '#D68910');\r\n\r\nexport default ColorElement;\r\n","import ColorElement from '../Style/ColorElement';\r\n\r\nconst GraphBuilder = (id, name, element, friends) => {\r\n    let data = {\r\n        nodes: [],\r\n        links: []\r\n    };\r\n    let mapData = new Map();\r\n    let mapLinks = new Map();\r\n\r\n    data.nodes.push({\r\n        id,\r\n        color: ColorElement.get(element)\r\n    });\r\n    mapData.set(id, { name, element })\r\n\r\n    friends.forEach((friend) => {\r\n        data.nodes.push({\r\n            id: friend.id, \r\n            color: ColorElement.get(friend.element)\r\n        });\r\n        data.links.push({ \r\n            source: id,\r\n            target: friend.id,\r\n            color: 'black'\r\n        });\r\n        mapData.set(friend.id, { name: friend.name, element: friend.element });\r\n        mapLinks.set([id, friend.id], true);\r\n        mapLinks.set([friend.id, id], true);\r\n    });\r\n\r\n    return { data, mapData, mapLinks };\r\n}\r\n\r\nexport default GraphBuilder;\r\n","const ValidateData = (id, arr) => {\r\n    let hashMap = new Map();\r\n    hashMap.set(id, true);\r\n    let validArr = [];\r\n    arr.forEach((e) => {\r\n        if (hashMap.has(e.id) === false) {\r\n            hashMap.set(e.id, true);\r\n            validArr.push(e);\r\n        }\r\n    })\r\n    return validArr;\r\n}\r\n\r\nexport default ValidateData;","import ColorElement from '../Style/ColorElement';\r\n\r\nconst GraphExpander = (graphData, id, friends) => {\r\n    let { data, mapData, mapLinks } = graphData;\r\n    friends.forEach((friend) => {\r\n        if (mapData.has(friend.id) === false) {\r\n            mapData.set(friend.id, { name: friend.name, element: friend.element });\r\n            data.nodes.push({\r\n                id: friend.id, \r\n                color: ColorElement.get(friend.element)\r\n            });\r\n        }\r\n        if (mapLinks.has([id, friend.id]) === false) {\r\n            mapLinks.set([id, friend.id], true);\r\n            mapLinks.set([friend.id, id], true);\r\n            data.links.push({ \r\n                source: id,\r\n                target: friend.id,\r\n                color: 'black'\r\n            });\r\n        }\r\n    });\r\n\r\n    return { data, mapData, mapLinks };\r\n}\r\n\r\nexport default GraphExpander;","import React from 'react';\r\nimport { Button, Box,\r\n         Typography, OutlinedInput } from '@material-ui/core';\r\nimport './SearchBar.css';\r\n\r\nconst searchTitle = \"Search the person's graph of friends with the person's ID\";\r\n\r\nclass SearchBar extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            idValue : ''\r\n        };\r\n    }\r\n\r\n    onChanged = (e) => {\r\n        this.setState({ idValue: e.target.value });\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.handleGetRequest(this.state.idValue);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='searchBar'>\r\n            <Typography className='searchTypography' variant='h5'>\r\n            {searchTitle}\r\n            </Typography>\r\n            <form className='searchForm' onSubmit={this.handleSubmit}>\r\n                <OutlinedInput fullWidth required type=\"number\"\r\n                    value={this.state.idValue} onChange={this.onChanged}\r\n                    placeholder=\"Search by ID\" variant=\"outlined\" color=\"primary\"/>     \r\n                <Box m={1.2} />\r\n                <Button type='submit' variant='outlined' color='primary'>\r\n                SEARCH\r\n                </Button>\r\n            </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SearchBar;","import React from 'react';\r\nimport { Drawer, Typography,\r\n        Box, ListItemText, Button} from '@material-ui/core';\r\nimport './FriendDrawer.css';\r\nimport ColorElement from '../utils/Style/ColorElement';\r\n\r\nconst anchor = 'bottom';\r\n\r\nconst getStyle = (element) => {\r\n\r\n    const retColor = ColorElement.get(element);\r\n    const borderAtr = '3px solid ' + retColor; \r\n\r\n    return {\r\n        color: retColor,\r\n        padding: 20,\r\n        border: borderAtr,\r\n        borderRadius: 20\r\n    };\r\n}\r\n\r\nconst listItem = (friend) => {\r\n    return (\r\n            <Box key={friend.id} p={1}>\r\n            <ListItemText primary={friend.name}\r\n                    secondary={friend.element} style={getStyle(friend.element)} />\r\n            </Box>\r\n    )\r\n}\r\n\r\nconst list = (name, friends) => {\r\n\r\n    if (friends === null) return null;\r\n\r\n    const nameTitle = \"List of \" + name + \"'s friends:\";\r\n\r\n    return (\r\n        <div className='list'>\r\n        <Typography variant=\"h6\">{nameTitle}</Typography>\r\n        <Box display='flex'\r\n            flexWrap='wrap'\r\n            justifyContent='center' m={1} p={1}>\r\n            {friends.map((friend) => {\r\n                return listItem(friend);\r\n            })}\r\n        </Box>\r\n        </div>\r\n    )\r\n}  \r\n\r\nclass FriendDrawer extends React.Component {\r\n    render() {\r\n\r\n        if (this.props.showFriends === false) {\r\n            return (\r\n                <div></div>\r\n            )\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <React.Fragment key={anchor}>\r\n                    <Drawer\r\n                        anchor={anchor}\r\n                        open={this.props.showFriends}\r\n                        onClose={this.props.handleCloseDrawer}\r\n                        onOpen={this.props.handleOpenDrawer}\r\n                    >\r\n                    <Button onClick={this.props.handleCloseDrawer}\r\n                        color='primary' variant='outlined' size=\"large\">CLOSE LIST</Button>\r\n                    {list(this.props.name, this.props.friends)}\r\n                    </Drawer>\r\n                </React.Fragment>\r\n            </div>\r\n        )   \r\n    }\r\n}\r\n\r\nexport default FriendDrawer;","const GraphConfiguration = {\r\n    landscape: {\r\n        height: 500,\r\n        width: 1000,\r\n        minZoom: 1,\r\n        maxZoom: 1,\r\n        node: {\r\n            size: 600,\r\n            fontSize: 15,\r\n            strokeColor: 'black'\r\n        }\r\n    },\r\n    portrait: {\r\n        height: 430,\r\n        width: 360,\r\n        minZoom: 1,\r\n        maxZoom: 1,\r\n        node: {\r\n            size: 300,\r\n            fontSize: 15,\r\n            strokeColor: 'black'\r\n        }\r\n    }\r\n};\r\n\r\nexport default GraphConfiguration;","import React, { Component } from 'react';\r\nimport { Graph } from \"react-d3-graph\";\r\nimport { Typography, Box, Button } from '@material-ui/core';\r\nimport axios from 'axios';\r\nimport API from '../utils/Data/API';\r\nimport FriendDrawer from '../FriendDrawer/FriendDrawer';\r\nimport ColorElement from '../utils/Style/ColorElement';\r\nimport ValidateData from '../utils/Data/ValidateData';\r\nimport GraphConfiguration from '../utils/Graph/GraphConfiguration';\r\nimport MediaQuery from 'react-responsive';\r\nimport './FriendGraph.css';\r\n\r\nclass FriendGraph extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        // State of a node\r\n        this.state = {\r\n            id: null,\r\n            name: null,\r\n            element: null,\r\n            friends: null,\r\n            showFriends: false\r\n        }\r\n    }\r\n\r\n    \r\n    onMouseOverNode = (id) => {\r\n        const { mapData } = this.props.dataValue.graphData;\r\n        this.setState(\r\n            {\r\n                id,\r\n                name: mapData.get(id).name,\r\n                element: mapData.get(id).element\r\n            }\r\n        )\r\n    }\r\n        \r\n    handleHoveredNodeDetail = (data) => {\r\n        const { id, friends } = data.payload;\r\n        const validFriends = ValidateData(id, friends);\r\n        this.setState({\r\n            friends: validFriends,\r\n            showFriends: true\r\n        });\r\n    }\r\n\r\n    onHoveredNodeDetail = () => {\r\n        axios.get(API + this.state.id)\r\n        .then(result => this.handleHoveredNodeDetail(result.data))\r\n        .catch((error) => console.log(error));\r\n    }\r\n\r\n    handleCloseDrawer = () => {\r\n        this.setState({ showFriends: false });\r\n    }\r\n\r\n    handleOpenDrawer = () => {\r\n        this.setState({ showFriends: true })\r\n    }\r\n\r\n    render() {\r\n\r\n        const { id, graphData, error } = this.props.dataValue;\r\n\r\n        if (error !== null) {\r\n            return (\r\n                <Typography style={{ textAlign: 'center' }} color=\"error\" variant=\"h6\" >\r\n                    {error}\r\n                </Typography>\r\n            )\r\n        }\r\n\r\n        if (id === null) {\r\n            return (\r\n                <div></div>\r\n            )\r\n        }\r\n\r\n        return (\r\n            <div style={{ textAlign: 'center' }}>\r\n                <Typography variant='subtitle1'>\r\n                    Hovered Node Details:\r\n                </Typography>\r\n                {this.state.id === null ?\r\n                    <div>\r\n                    <Typography variant='subtitle1' style={{ color: 'gray' }}>\r\n                        Hover on a node to see it's detail\r\n                    </Typography>\r\n                    <Box m={1.2} />\r\n                    <Button variant='outlined' style={{ color: 'gray' }} disabled>\r\n                        See Hovered Node Friends List\r\n                    </Button>\r\n                    </div>\r\n                    :\r\n                    <div>\r\n                    <Typography variant='subtitle1'\r\n                    style={{ color: ColorElement.get(this.state.element) }}>\r\n                        [{this.state.id}] {this.state.name} ({this.state.element})\r\n                    </Typography>\r\n                    <Box m={1.2} />\r\n                    <Button onClick={this.onHoveredNodeDetail} variant='outlined' color='secondary'>\r\n                        See Hovered Node Friends List\r\n                    </Button>\r\n                    </div>\r\n                }\r\n                <MediaQuery query=\"(orientation: landscape)\">\r\n                <Graph\r\n                    id=\"graph-id\"\r\n                    data={graphData.data}\r\n                    config={GraphConfiguration.landscape}\r\n                    onMouseOverNode={this.onMouseOverNode}\r\n                    onClickNode={this.props.onExpandNode}\r\n                />\r\n                </MediaQuery>\r\n                <MediaQuery query=\"(orientation: portrait)\">\r\n                <Graph\r\n                    id=\"graph-id\"\r\n                    data={graphData.data}\r\n                    config={GraphConfiguration.portrait}\r\n                    onMouseOverNode={this.onMouseOverNode}\r\n                    onClickNode={this.props.onExpandNode}\r\n                />\r\n                </MediaQuery>\r\n                <FriendDrawer\r\n                        name={this.state.name}\r\n                        friends={this.state.friends}\r\n                        showFriends={this.state.showFriends}\r\n                        handleCloseDrawer={this.handleCloseDrawer}\r\n                        handleOpenDrawer={this.handleOpenDrawer}\r\n                />\r\n                <Box m={3} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default FriendGraph;","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport API from '../utils/Data/API';\r\nimport GraphBuilder from '../utils/Graph/GraphBuilder';\r\nimport ValidateData from '../utils/Data/ValidateData';\r\nimport GraphExpander from '../utils/Graph/GraphExpander';\r\nimport SearchBar from '../SearchBar/SearchBar';\r\nimport FriendGraph from '../FriendGraph/FriendGraph';\r\n\r\nclass SearchGraph extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            id: null,\r\n            graphData: null,\r\n            error: null\r\n        };\r\n    }\r\n\r\n    \r\n    setData = (data) => {\r\n        const { id, name, element, friends } = data.payload;\r\n        const validFriends = ValidateData(id, friends);\r\n        const graphData = GraphBuilder(id, name, element, validFriends);\r\n        this.setState({ id, graphData, error: null });\r\n    }\r\n    \r\n    handleGetRequest = (id) => {\r\n        const errorMsg = `Error: ID ${id} not found.`;\r\n        axios.get(API + id)\r\n        .then(result => this.setData(result.data))\r\n        .catch(() => this.setState({ error: errorMsg }));\r\n    }\r\n\r\n    handleExpand = (data) => {\r\n        const { id, friends } = data.payload;\r\n        const validFriends = ValidateData(id, friends);\r\n        console.log(\"Sebelum\", this.state.graphData);\r\n        const graphData = GraphExpander(this.state.graphData, id, validFriends);\r\n        console.log(\"Sesudah\", graphData);\r\n        this.setState({ graphData })\r\n    }\r\n\r\n    onExpandNode = (id) => {\r\n        axios.get(API + id)\r\n        .then(result => this.handleExpand(result.data))\r\n        .catch((error) => console.log(error));\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div>\r\n                <SearchBar handleGetRequest={this.handleGetRequest} />\r\n                <FriendGraph dataValue={this.state}\r\n                             onExpandNode={this.onExpandNode}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SearchGraph;","import React from 'react';\nimport Navbar from './Navbar/Navbar';\nimport SearchGraph from './SearchGraph/SearchGraph';\n\nconst nameOfTitle = \"Avatar Suspect Expander\";\n\nconst App = () => {\n    return (\n      <div className=\"App\">\n        <Navbar nameTitle={nameOfTitle} variant='h5' />\n        <SearchGraph />\n      </div>\n    )\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}